// <auto-generated />
using System;
using DPKS.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DPKS.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250605092811_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DPKS.Data.Entites.AnhPhong", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhotoId"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LateModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhongId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PhotoId");

                    b.HasIndex("PhongId");

                    b.HasIndex("PhotoName")
                        .IsUnique()
                        .HasFilter("[PhotoName] IS NOT NULL");

                    b.ToTable("AnhPhong", (string)null);
                });

            modelBuilder.Entity("DPKS.Data.Entites.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descritption")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("DPKS.Data.Entites.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ConfirmationCodeExpiry")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EmailConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuocGiaId")
                        .HasColumnType("int");

                    b.Property<string>("ResetPasswordCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetPasswordCodeExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TinhId")
                        .HasColumnType("int");

                    b.Property<string>("TwoFactorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TwoFactorCodeExpiry")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("QuocGiaId");

                    b.HasIndex("TinhId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DPKS.Data.Entites.DatPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LateModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNhanPhong")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTraPhong")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhongId")
                        .HasColumnType("int");

                    b.Property<int>("SoDem")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongKhach")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TongTien");

                    b.Property<int>("TrangThaiDatPhongId")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiPhongId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhongId");

                    b.HasIndex("TrangThaiDatPhongId");

                    b.HasIndex("TrangThaiPhongId");

                    b.HasIndex("UserId");

                    b.ToTable("DatPhong", null, t =>
                        {
                            t.HasCheckConstraint("CK_Reservation_SoDem", "SoDem >=1 AND SoDem<=31");

                            t.HasCheckConstraint("CK_Reservation_SoLuongKhach", "SoLuongKhach >=1 AND SoLuongKhach<=4");
                        });
                });

            modelBuilder.Entity("DPKS.Data.Entites.FeedBack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BinhLuan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DanhGia")
                        .HasColumnType("int");

                    b.Property<int>("DatPhongId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LateModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DatPhongId");

                    b.HasIndex("UserId");

                    b.ToTable("FeedBacks", null, t =>
                        {
                            t.HasCheckConstraint("CK_FeedBacks_DanhGia", "DanhGia >=1 AND DanhGia<=5");
                        });
                });

            modelBuilder.Entity("DPKS.Data.Entites.LoaiPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LateModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiPhong", (string)null);
                });

            modelBuilder.Entity("DPKS.Data.Entites.Phong", b =>
                {
                    b.Property<int>("PhongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhongId"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Gia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LateModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoaiPhongId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoPhong")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TrangThaiPhongId")
                        .HasColumnType("int");

                    b.Property<string>("loaiGiuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("loaiView")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhongId");

                    b.HasIndex("LoaiPhongId");

                    b.HasIndex("SoPhong")
                        .IsUnique()
                        .HasFilter("[SoPhong] IS NOT NULL");

                    b.HasIndex("TrangThaiPhongId");

                    b.ToTable("Phong", (string)null);
                });

            modelBuilder.Entity("DPKS.Data.Entites.PhuongThucThanhToan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LateModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("loaiThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhuongThucThanhToan", (string)null);
                });

            modelBuilder.Entity("DPKS.Data.Entites.QuocGia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LateModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaQG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuocGia", (string)null);
                });

            modelBuilder.Entity("DPKS.Data.Entites.ThanhToan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DatPhongId")
                        .HasColumnType("int");

                    b.Property<decimal>("Gia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Gia");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LateModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhuongThucThanhToanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiDiemThanhToan")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DatPhongId")
                        .IsUnique();

                    b.HasIndex("PhuongThucThanhToanId");

                    b.ToTable("ThanhToan", (string)null);
                });

            modelBuilder.Entity("DPKS.Data.Entites.TienNghi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LateModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TienNghi", (string)null);
                });

            modelBuilder.Entity("DPKS.Data.Entites.TienNghiTheoLoaiPhong", b =>
                {
                    b.Property<int>("LoaiPhongId")
                        .HasColumnType("int");

                    b.Property<int>("TienNghiId")
                        .HasColumnType("int");

                    b.HasKey("LoaiPhongId", "TienNghiId");

                    b.HasIndex("TienNghiId");

                    b.ToTable("tienNghiTheoLoaiPhongs");
                });

            modelBuilder.Entity("DPKS.Data.Entites.Tinh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LateModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuocGiaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuocGiaId");

                    b.ToTable("Tinh", (string)null);
                });

            modelBuilder.Entity("DPKS.Data.Entites.TrangThaiDatPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LateModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trangThaiDatPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrangThaiDatPhong", (string)null);
                });

            modelBuilder.Entity("DPKS.Data.Entites.TrangThaiPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LateModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trangThaiPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrangThaiPhong", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "ProviderKey");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("DPKS.Data.Entites.AnhPhong", b =>
                {
                    b.HasOne("DPKS.Data.Entites.Phong", "Phong")
                        .WithMany("anhPhongs")
                        .HasForeignKey("PhongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phong");
                });

            modelBuilder.Entity("DPKS.Data.Entites.ApplicationUser", b =>
                {
                    b.HasOne("DPKS.Data.Entites.QuocGia", "QuocGia")
                        .WithMany("Users")
                        .HasForeignKey("QuocGiaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DPKS.Data.Entites.Tinh", "Tinh")
                        .WithMany("Users")
                        .HasForeignKey("TinhId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("QuocGia");

                    b.Navigation("Tinh");
                });

            modelBuilder.Entity("DPKS.Data.Entites.DatPhong", b =>
                {
                    b.HasOne("DPKS.Data.Entites.Phong", "Phong")
                        .WithMany("datPhongs")
                        .HasForeignKey("PhongId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DPKS.Data.Entites.TrangThaiDatPhong", "TrangThaiDatPhong")
                        .WithMany("datPhongs")
                        .HasForeignKey("TrangThaiDatPhongId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DPKS.Data.Entites.TrangThaiPhong", "TrangThaiPhong")
                        .WithMany()
                        .HasForeignKey("TrangThaiPhongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DPKS.Data.Entites.ApplicationUser", "User")
                        .WithMany("datPhongs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phong");

                    b.Navigation("TrangThaiDatPhong");

                    b.Navigation("TrangThaiPhong");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DPKS.Data.Entites.FeedBack", b =>
                {
                    b.HasOne("DPKS.Data.Entites.DatPhong", "DatPhong")
                        .WithMany("feedBacks")
                        .HasForeignKey("DatPhongId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DPKS.Data.Entites.ApplicationUser", "User")
                        .WithMany("FeedBacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatPhong");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DPKS.Data.Entites.Phong", b =>
                {
                    b.HasOne("DPKS.Data.Entites.LoaiPhong", "LoaiPhong")
                        .WithMany("phongs")
                        .HasForeignKey("LoaiPhongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DPKS.Data.Entites.TrangThaiPhong", "TrangThaiPhong")
                        .WithMany("Phongs")
                        .HasForeignKey("TrangThaiPhongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiPhong");

                    b.Navigation("TrangThaiPhong");
                });

            modelBuilder.Entity("DPKS.Data.Entites.ThanhToan", b =>
                {
                    b.HasOne("DPKS.Data.Entites.DatPhong", "DatPhong")
                        .WithOne("ThanhToan")
                        .HasForeignKey("DPKS.Data.Entites.ThanhToan", "DatPhongId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DPKS.Data.Entites.PhuongThucThanhToan", "PhuongThucThanhToan")
                        .WithMany("thanhToans")
                        .HasForeignKey("PhuongThucThanhToanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatPhong");

                    b.Navigation("PhuongThucThanhToan");
                });

            modelBuilder.Entity("DPKS.Data.Entites.TienNghiTheoLoaiPhong", b =>
                {
                    b.HasOne("DPKS.Data.Entites.LoaiPhong", "LoaiPhong")
                        .WithMany("tienNghiTheoLoaiPhongs")
                        .HasForeignKey("LoaiPhongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DPKS.Data.Entites.TienNghi", "TienNghi")
                        .WithMany("tienNghiTheoLoaiPhongs")
                        .HasForeignKey("TienNghiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiPhong");

                    b.Navigation("TienNghi");
                });

            modelBuilder.Entity("DPKS.Data.Entites.Tinh", b =>
                {
                    b.HasOne("DPKS.Data.Entites.QuocGia", "QuocGia")
                        .WithMany("tinhs")
                        .HasForeignKey("QuocGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuocGia");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DPKS.Data.Entites.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DPKS.Data.Entites.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DPKS.Data.Entites.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("DPKS.Data.Entites.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DPKS.Data.Entites.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DPKS.Data.Entites.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DPKS.Data.Entites.ApplicationUser", b =>
                {
                    b.Navigation("FeedBacks");

                    b.Navigation("datPhongs");
                });

            modelBuilder.Entity("DPKS.Data.Entites.DatPhong", b =>
                {
                    b.Navigation("ThanhToan");

                    b.Navigation("feedBacks");
                });

            modelBuilder.Entity("DPKS.Data.Entites.LoaiPhong", b =>
                {
                    b.Navigation("phongs");

                    b.Navigation("tienNghiTheoLoaiPhongs");
                });

            modelBuilder.Entity("DPKS.Data.Entites.Phong", b =>
                {
                    b.Navigation("anhPhongs");

                    b.Navigation("datPhongs");
                });

            modelBuilder.Entity("DPKS.Data.Entites.PhuongThucThanhToan", b =>
                {
                    b.Navigation("thanhToans");
                });

            modelBuilder.Entity("DPKS.Data.Entites.QuocGia", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("tinhs");
                });

            modelBuilder.Entity("DPKS.Data.Entites.TienNghi", b =>
                {
                    b.Navigation("tienNghiTheoLoaiPhongs");
                });

            modelBuilder.Entity("DPKS.Data.Entites.Tinh", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DPKS.Data.Entites.TrangThaiDatPhong", b =>
                {
                    b.Navigation("datPhongs");
                });

            modelBuilder.Entity("DPKS.Data.Entites.TrangThaiPhong", b =>
                {
                    b.Navigation("Phongs");
                });
#pragma warning restore 612, 618
        }
    }
}

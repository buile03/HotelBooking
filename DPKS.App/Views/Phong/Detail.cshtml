@model DPKS.Model.Phong.ChiTietPhongVm
@{
    ViewData["Title"] = "Chi tiết phòng";
    ViewData["PageTitle"] = $"Chi tiết phòng {Model.SoPhong}";
}

<div class="container my-5">
    <!-- Tiêu đề trang -->
    <h3 class="text-center mb-4 fw-bold">@ViewData["PageTitle"]</h3>

    <!-- Thông báo lỗi -->
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.ErrorMessage
        </div>
    }

    <!-- Carousel ảnh phòng -->
    <div id="phongCarousel" class="carousel slide mb-4 shadow-sm rounded-3" data-bs-ride="carousel">
        <div class="carousel-indicators">
            @if (Model.AnhPhong.Any())
            {
                @foreach (var anh in Model.AnhPhong.Select((value, index) => new { value, index }))
                {
                    <button type="button" data-bs-target="#phongCarousel" data-bs-slide-to="@anh.index" class="@(anh.index == 0 ? "active" : "")" aria-current="@(anh.index == 0 ? "true" : "false")" aria-label="Slide @(anh.index + 1)"></button>
                }
            }
            else
            {
                <button type="button" data-bs-target="#phongCarousel" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            }
        </div>
        <div class="carousel-inner">
            @if (Model.AnhPhong.Any())
            {
                @foreach (var anh in Model.AnhPhong.Select((value, index) => new { value, index }))
                {
                    <div class="carousel-item @(anh.index == 0 ? "active" : "")">
                        <img src="/images/room/@anh.value" class="d-block w-100" alt="Ảnh phòng" style="height: 400px; object-fit: cover;" loading="lazy">
                    </div>
                }
            }
            else
            {
                <div class="carousel-item active">
                    <img src="/images/room/default.png" class="d-block w-100" alt="Không có ảnh" style="height: 400px; object-fit: cover;" loading="lazy">
                </div>
            }
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#phongCarousel" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#phongCarousel" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>

    <!-- Thông tin phòng -->
    <div class="card shadow-sm p-4 mb-4 bg-light rounded-3">
        <div class="row">
            <div class="col-md-6 col-12 mb-3">
                <h5 class="fw-bold mb-3">Thông tin phòng</h5>
                <p><strong>Số phòng:</strong> @Model.SoPhong</p>
                <p><strong>Loại phòng:</strong> @Model.Type</p>
                <p><strong>Giá:</strong> @Model.Gia.ToString("C", new System.Globalization.CultureInfo("vi-VN")) / đêm</p>
                <p><strong>Trạng thái:</strong> @enHelper.GetDescription(Model.TrangThaiPhong)</p>
                <p><strong>Sức chứa:</strong> @Model.SoLuongKhach người</p>
                <p><strong>Loại giường:</strong> @enHelper.GetDescription(Model.LoaiGiuong)</p>
                <p><strong>View:</strong> @enHelper.GetDescription(Model.LoaiView)</p>
                <p><strong>Mô tả:</strong> @Model.BinhLuan</p>
            </div>
            <div class="col-md-6 col-12">
                <h5 class="fw-bold mb-3">Tiện nghi</h5>
                <ul class="list-group list-group-flush">
                    @if (Model.TienNghis.Any())
                    {
                        @foreach (var tienNghi in Model.TienNghis)
                        {
                            <li class="list-group-item">@tienNghi</li>
                        }
                    }
                    else
                    {
                        <li class="list-group-item text-muted">Không có tiện nghi</li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <!-- Form tính giá -->
    <div class="card shadow-sm p-4 bg-light rounded-3">
        <h5 class="fw-bold mb-3">Tính giá phòng</h5>
        <form id="calculatePriceForm" class="row g-3">
            <input type="hidden" name="phongId" value="@Model.PhongId">
            <div class="col-md-4 col-12">
                <label class="form-label">Ngày nhận phòng</label>
                <input type="date" class="form-control" id="ngayNhanPhong" name="ngayNhanPhong" required>
            </div>
            <div class="col-md-4 col-12">
                <label class="form-label">Ngày trả phòng</label>
                <input type="date" class="form-control" id="ngayTraPhong" name="ngayTraPhong" required>
            </div>
            <div class="col-md-4 col-12 d-flex align-items-end">
                <button type="submit" class="btn btn-primary w-100" id="calculateButton">
                    <span id="calculateText">Tính giá</span>
                    <span id="loadingSpinner" class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                </button>
            </div>
        </form>
        <div id="priceResult" class="mt-3"></div>
    </div>

    <!-- Nút điều hướng -->
    <div class="text-center mt-4">
        <a href="@Url.Action("Index")" class="btn btn-outline-secondary me-2">Quay lại danh sách</a>
        <a href="@Url.Action("Book", new { phongId = Model.PhongId })" class="btn btn-primary">Đặt phòng ngay</a>
    </div>

    <!-- Nút cuộn lên đầu -->
    <button id="scrollToTop" class="btn btn-outline-primary rounded-circle position-fixed bottom-0 end-0 m-3 d-none" title="Lên đầu trang">
        <i class="bi bi-arrow-up"></i>
    </button>
</div>

@section Scripts {
    <script>
        document.getElementById('calculatePriceForm').addEventListener('submit', async function (e) {
        e.preventDefault();
        const calculateButton = document.getElementById('calculateButton');
        const calculateText = document.getElementById('calculateText');
        const loadingSpinner = document.getElementById('loadingSpinner');
        const priceResult = document.getElementById('priceResult');

        calculateButton.disabled = true;
        calculateText.classList.add('d-none');
        loadingSpinner.classList.remove('d-none');

        const phongId = document.querySelector('input[name="phongId"]').value;
        const ngayNhanPhong = document.getElementById('ngayNhanPhong').value;
        const ngayTraPhong = document.getElementById('ngayTraPhong').value;

    // Validate ngày
    if (!ngayNhanPhong || !ngayTraPhong) {
        priceResult.innerHTML = `<div class="alert alert-danger">Vui lòng chọn cả ngày nhận và trả phòng.</div>`;
        calculateButton.disabled = false;
        calculateText.classList.remove('d-none');
        loadingSpinner.classList.add('d-none');
        return;
    }

    const nhanDate = new Date(ngayNhanPhong);
    const traDate = new Date(ngayTraPhong);
    if (nhanDate >= traDate) {
        priceResult.innerHTML = `<div class="alert alert-danger">Ngày nhận phòng phải trước ngày trả phòng.</div>`;
        calculateButton.disabled = false;
        calculateText.classList.remove('d-none');
        loadingSpinner.classList.add('d-none');
        return;
    }

    try {
        const response = await fetch('@Url.Action("CalculatePrice")', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                phongId: parseInt(phongId),
                ngayNhanPhong: ngayNhanPhong,
                ngayTraPhong: ngayTraPhong
            })
        });

        const result = await response.json();
        if (result.success) {
            priceResult.innerHTML = `
                <div class="alert alert-success">
                    <strong>Tổng giá:</strong> ${result.totalPrice.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}<br>
                    <small>Số đêm: ${result.soDem}</small>
                </div>`;
        } else {
            priceResult.innerHTML = `<div class="alert alert-danger">${result.message}</div>`;
        }
    } catch (error) {
        priceResult.innerHTML = `<div class="alert alert-danger">Lỗi: ${error.message}</div>`;
    } finally {
        calculateButton.disabled = false;
        calculateText.classList.remove('d-none');
        loadingSpinner.classList.add('d-none');
    }
});
    </script>
    <style>
        #scrollToTop {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    </style>
}